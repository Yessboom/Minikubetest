name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - Test
  push:
    branches:
      - main
      - Dev

# Add this permissions section
permissions:
  contents: write
  pull-requests: write
  actions: read

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Jest tests
        run: npm test

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/Dev' && github.event_name == 'push'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      # Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/my-custom-nginx:latest
            ${{ secrets.DOCKER_USERNAME }}/my-custom-nginx:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Update Kubernetes deployment with new image
      - name: Update Kubernetes deployment
        run: |
          # Update deployment.yaml to use the new Docker Hub image
          sed -i "s|image: my-custom-nginx:.*|image: ${{ secrets.DOCKER_USERNAME }}/my-custom-nginx:${{ github.sha }}|g" kubernetes/deployment.yaml
          
          # Also update imagePullPolicy to work with Docker Hub
          sed -i "s|imagePullPolicy: Never|imagePullPolicy: Always|g" kubernetes/deployment.yaml
          
          # Add updated deployment file to git
          git add kubernetes/deployment.yaml

      # Update ingress with timestamp annotation
      - name: Update ingress timestamp
        run: |
          # Add timestamp annotation to ingress for tracking (correct path)
          if [ -f "kubernetes/ingress.yaml" ]; then
            sed -i '/metadata:/a\  annotations:\n    deployment.timestamp: "${{ github.run_number }}-$(date +%s)"' kubernetes/ingress.yaml
            git add kubernetes/ingress.yaml
          fi

      # Commit image updates
      - name: Commit Docker image updates
        run: |
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update Docker image to ${{ secrets.DOCKER_USERNAME }}/my-custom-nginx:${{ github.sha }} [skip ci]"
          fi

      # Merge to Test branch
      - name: Merge Dev into Test branch
        run: |
          git fetch origin
          git checkout Test 2>/dev/null || git checkout -b Test
          git merge origin/Dev --no-ff -m "Auto-merge: Deploy Dev to Test after successful tests and Docker build"
          git push origin Test

      # Create deployment comment
      - name: Create deployment comment
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const sha = context.sha;
            const shortSha = sha.substring(0, 8);
            
            await github.rest.repos.createCommitComment({
              owner,
              repo,
              commit_sha: sha,
              body: `🚀 **Deployment Triggered!**
            
            ✅ Tests passed on Dev branch
            🐳 Docker image built and pushed to Docker Hub
            📦 Code automatically merged to Test branch
            
            **Docker Image Details:**
            - Repository: ${{ secrets.DOCKER_USERNAME }}/my-custom-nginx
            - Tags: latest, ${shortSha}
            - Full image: ${{ secrets.DOCKER_USERNAME }}/my-custom-nginx:${sha}
            - Build #: ${{ github.run_number }}
            
            **Next Steps:**
            Pull and deploy the new image in your Kubernetes cluster!`
            });