name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - Test
  push:
    branches:
      - main
      - Dev

# Add this permissions section
permissions:
  contents: write
  pull-requests: write
  actions: read

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Jest tests
        run: npm test

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/Dev' && github.event_name == 'push'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      # Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/my-custom-nginx:${{ github.sha }}
            ${{ secrets.DOCKER_USERNAME }}/my-custom-nginx:latest

      # Update Kubernetes manifest
      - name: Update Kubernetes manifest
        run: |
          # Update image tag in deployment.yaml
          sed -i "s|image: ${{ secrets.DOCKER_USERNAME }}/my-custom-nginx:.*|image: ${{ secrets.DOCKER_USERNAME }}/my-custom-nginx:${{ github.sha }}|g" kubernetes/deployment.yaml
          # Add a timestamp annotation to force rollout even if image looks the same
          sed -i "s|kubernetes.io/change-cause:.*|kubernetes.io/change-cause: \"Updated $(date -u +'%Y-%m-%dT%H:%M:%SZ')\"|g" kubernetes/deployment.yaml

      # Commit and push updated manifest (GitOps)
      - name: Commit and push updated manifest (GitOps)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add kubernetes/deployment.yaml
          git commit -m "chore: update image to ${{ github.sha }}" || echo "No changes"

      # Merge to Test branch
      - name: Merge Dev into Test branch
        run: |
          git fetch origin
          git checkout Test 2>/dev/null || git checkout -b Test
          git merge origin/Dev --no-ff -m "Auto-merge: Deploy Dev to Test after successful tests and Docker build"
          git push origin Test

      # Create deployment comment
      - name: Create deployment comment
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const sha = context.sha;
            const shortSha = sha.substring(0, 8);
            
            await github.rest.repos.createCommitComment({
              owner,
              repo,
              commit_sha: sha,
              body: `🚀 **Deployment Triggered!**
            
            ✅ Tests passed on Dev branch
            🐳 Docker image built and pushed to Docker Hub
            📦 Code automatically merged to Test branch
            
            **Docker Image Details:**
            - Repository: ${{ secrets.DOCKER_USERNAME }}/my-custom-nginx
            - Tags: latest, ${shortSha}
            - Full image: ${{ secrets.DOCKER_USERNAME }}/my-custom-nginx:${sha}
            - Build #: ${{ github.run_number }}
            
            **Next Steps:**
            Pull and deploy the new image in your Kubernetes cluster!`
            });